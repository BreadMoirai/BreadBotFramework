buildscript {
    repositories {
        flatDir {
            dirs 'C:/Users/TonTL/Desktop/git/github-release/build/libs'
        }
    }
    dependencies {
        classpath group: 'com.github.breadmoirai', name: 'github-release', version: '0.1.0'
    }
}

plugins {
    id 'java'
    id 'idea'
    //id 'groovy'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id 'com.sedmelluq.jdaction' version '1.0.1'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'maven-publish'
    id 'signing'
    //id 'net.breadmoirai.github-release'
}

apply plugin: 'com.github.breadmoirai.github-release'

group 'com.github.breadmoirai'
version '0.4.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    //plugin
    //gradleApi()
    //compileClasspath 'net.breadmoirai:github-release:0.1.0'

    //Discord Java Library
    compileOnly 'net.dv8tion:JDA:3.2.0_241'

    //Database
//    compile 'org.jdbi:jdbi3:3.0.0-beta1'
//    compile 'org.jdbi:jdbi3-parent:3.0.0-beta1'
//    compile 'org.jdbi:jdbi3-sqlobject:3.0.0-beta1'

    //slf4j
//    compile 'org.slf4j:slf4j-api:1.8.0-alpha2'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.j256.simplemagic:simplemagic:1.10'
    //Utility
    compile 'org.reflections:reflections:0.9.10'
    //compile 'com.jagrosh:JDA-Utilities:1.2'
    compile 'org.jetbrains:annotations:13.0'
//    compile 'org.apache.commons:commons-lang3:3.6'

    //testing
//    compile 'com.sedmelluq:lavaplayer:1.2.42'
//    compile 'org.slf4j:slf4j-simple:1.8.0-alpha2'
//    compile 'org.apache.derby:derby:10.13.1.1'
//    compile 'com.google.api-client:google-api-client:1.22.0'
//    compile 'com.google.apis:google-api-services-youtube:v3-rev183-1.22.0'
}

githubRelease {
    token = new File('github.token').text
    body = """
## Adding as Dependency
### Gradle

\tallprojects {
\t\trepositories {
\t\t\t...
\t\t\tmaven { url 'https://dl.bintray.com/breadmoirai/maven'}
\t\t}
\t}

\tdependencies {
\t\tcompile 'net.breadmoirai:SamuraiBotFramework:0.3.3'
\t}
"""
    String version = project.version
    def maven = """
### Maven

\\t<repositories>
\\t\\t<repository>
\\t\\t\\t<id>jitpack.io</id>
\\t\\t\\t\\t<url>https://jitpack.io</url>
\\t\\t</repository>
\\t</repositories>

\\t<dependency>
\\t\\t<groupId>com.github.BreadMoirai</groupId>
\\t\\t<artifactId>Samurai7</artifactId>
\\t\\t<version>v{${version}}</version>
\\t</dependency>"""
    prerelease = true
    draft = true
    FilenameFilter filter = { dir, file -> file.contains(version) }
    releaseAssets = jar.destinationDir.listFiles filter
}


bintray {
    user = 'breadmoirai'
    key = new File('bintray.key').getText()
    publications = ["BintrayRelease"]
    publish = true
    pkg {
        repo = 'maven'
        name = 'SBF'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/breadmoirai/SamuraiBotFramework.git'
        version {
            name = project.version
            released = new Date()
        }
    }
}

publishing {
    publications {
        BintrayRelease(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version version
            artifact javadocJar
            artifact sourcesJar
        }
    }
}



compileJava.options.encoding = 'UTF-8'

shadowJar.classifier = "withDependencies"
javadoc.source = sourceSets.main.allJava
javadoc.failOnError = false

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

task jarMake {
    dependsOn jar
    dependsOn sourcesJar
    dependsOn javadocJar
    dependsOn shadowJar
}

task javadocDir(type: Copy) {
    delete('docs')
    from javadoc.destinationDir
    into 'docs'
}

task publishJavadoc(type: Exec) {
    dependsOn javadoc
    dependsOn javadocDir
    commandLine 'bash',
            """
        cd ${javadocDir.destinationDir.absolutePath}
        git checkout -t origin/gh-pages
        git add .
        git add -u
        git commit -m "JavadocWebsite ver ${project.version} on ${new Date()}"
        git push origin gh-pages
        cd ..
        rm -rf ${javadocDir.destinationDir.absolutePath}
    """
}